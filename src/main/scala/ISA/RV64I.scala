package ISA

import chisel3.util.BitPat

object RV64I extends Decoder32Bits {
  // RV32I Base Instruction Set
  // U-type               |-func7-|-rs2-|-rs1-|-funct3-|--rd-|opcode|
  def lui       = BitPat("b???????_?????_?????___???____?????_01101")
  def auipc     = BitPat("b???????_?????_?????___???____?????_00101")
  // J-type
  def jal       = BitPat("b???????_?????_?????___???____?????_11011")
  // I-type               |-func7-|-rs2-|-rs1-|-funct3-|--rd-|opcode|
  def jalr      = BitPat("b???????_?????_?????___000____?????_11001")
  // B-type               |-func7-|-rs2-|-rs1-|-funct3-|--rd-|opcode|
  def beq       = BitPat("b???????_?????_?????___000____?????_11000")
  def bne       = BitPat("b???????_?????_?????___001____?????_11000")
  def blt       = BitPat("b???????_?????_?????___100____?????_11000")
  def bge       = BitPat("b???????_?????_?????___101____?????_11000")
  def bltu      = BitPat("b???????_?????_?????___110____?????_11000")
  def bgeu      = BitPat("b???????_?????_?????___111____?????_11000")
  // I-type               |-func7-|-rs2-|-rs1-|-funct3-|--rd-|opcode|
  def lb        = BitPat("b???????_?????_?????___000____?????_00000")
  def lh        = BitPat("b???????_?????_?????___001____?????_00000")
  def lw        = BitPat("b???????_?????_?????___010____?????_00000")
  def lbu       = BitPat("b???????_?????_?????___100____?????_00000")
  def lhu       = BitPat("b???????_?????_?????___101____?????_00000")
  // S-type               |-func7-|-rs2-|-rs1-|-funct3-|-imm-|opcode|
  def sb        = BitPat("b???????_?????_?????___000____?????_01000")
  def sh        = BitPat("b???????_?????_?????___001____?????_01000")
  def sw        = BitPat("b???????_?????_?????___010____?????_01000")
  // I-type               |-func7-|-rs2-|-rs1-|-funct3-|--rd-|opcode|
  def addi      = BitPat("b???????_?????_?????___000____?????_00100")
  def slti      = BitPat("b???????_?????_?????___010____?????_00100")
  def sltiu     = BitPat("b???????_?????_?????___011____?????_00100")
  def xori      = BitPat("b???????_?????_?????___100____?????_00100")
  def ori       = BitPat("b???????_?????_?????___110____?????_00100")
  def andi      = BitPat("b???????_?????_?????___111____?????_00100")
  // R-type               |-func7-|-rs2-|-rs1-|-funct3-|--rd-|opcode|
  def add       = BitPat("b0000000_?????_?????___000____?????_01100")
  def sub       = BitPat("b0100000_?????_?????___000____?????_01100")
  def sll       = BitPat("b0000000_?????_?????___001____?????_01100")
  def slt       = BitPat("b0000000_?????_?????___010____?????_01100")
  def sltu      = BitPat("b0000000_?????_?????___011____?????_01100")
  def xor       = BitPat("b0000000_?????_?????___100____?????_01100")
  def srl       = BitPat("b0000000_?????_?????___101____?????_01100")
  def sra       = BitPat("b0100000_?????_?????___101____?????_01100")
  def or        = BitPat("b0000000_?????_?????___110____?????_01100")
  def and       = BitPat("b0000000_?????_?????___111____?????_01100")
  def fence     = BitPat("b???????_?????_?????___000____?????_00011")
  def ecall     = BitPat("b0000000_00000_00000___000____00000_11100")
  def ebreak    = BitPat("b0000000_00001_00000___000____00000_11100")
  // RV64I Base Instruction Set(in addition to RV32I)
  // I-type                   |-func7-|-rs2-|-rs1-|-funct3-|--rd-|opcode|
  def ld        = BitPat("b???????_?????_?????___011____?????_00000")
  def lwu       = BitPat("b???????_?????_?????___110____?????_00000")
  // S-type               |-func7-|-rs2-|-rs1-|-funct3-|-imm-|opcode|
  def sd        = BitPat("b???????_?????_?????___011____?????_01000")
  // I-type               |-func6|-shamt|-rs1-|-funct3-|--rd-|opcode|
  def slli      = BitPat("b000000_??????_?????___001____?????_00100")
  def srli      = BitPat("b000000_??????_?????___101____?????_00100")
  def srai      = BitPat("b010000_??????_?????___101____?????_00100")
  // I-type               |-func7-|-rs2-|-rs1-|-funct3-|--rd-|opcode|
  def addiw     = BitPat("b???????_?????_?????___000____?????_00110")
  // IS-type              |-func7-|shamt|-rs1-|-funct3-|--rd-|opcode|
  def slliw     = BitPat("b0000000_?????_?????___001____?????_00110")
  def srliw     = BitPat("b0000000_?????_?????___101____?????_00110")
  def sraiw     = BitPat("b0100000_?????_?????___101____?????_00110")
  // R-type               |-func7-|-rs2-|-rs1-|-funct3-|--rd-|opcode|
  def addw      = BitPat("b0000000_?????_?????___000____?????_01110")
  def subw      = BitPat("b0100000_?????_?????___000____?????_01110")
  def sllw      = BitPat("b0000000_?????_?????___001____?????_01110")
  def srlw      = BitPat("b0000000_?????_?????___101____?????_01110")
  def sraw      = BitPat("b0100000_?????_?????___101____?????_01110")
}
